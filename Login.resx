<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="IncomeBtn.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IuLfVzipZ3S8ZocAAAAASUVORK5CYII=
</value>
  </data>
</root>